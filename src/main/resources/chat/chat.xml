<!--
 	Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.

    WSO2 LLC. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="chat">
    <parameter name="connections" description="Connections"/>
    <parameter name="userID" description="User ID"/>
    <parameter name="system" description="System prompt"/>
    <parameter name="prompt" description="Prompt name"/>
    <parameter name="attachments" description="File attachements"/>
    <parameter name="outputType" description="Response type"/>
    <parameter name="responseVariable" description="Response variable name"/>
    <parameter name="overwriteBody"
               description="Replace the Message Body in Message Context with the response of the operation."/>

    <parameter name="modelName" description="Model name"/>
    <parameter name="temperature" description="Temperature"/>
    <parameter name="maxTokens" description="Max tokens"/>
    <parameter name="topP" description="Top P"/>
    <parameter name="frequencyPenalty" description="Frequency penalty"/>
    <parameter name="seed" description="Seed"/>

    <parameter name="knowledge" description="Knowledge store"/>
    <parameter name="history" description="Chat history"/>
    <parameter name="maxHistory" description="Max chat messages to be used in history"/>

    <sequence>
        <class name="org.wso2.carbon.esb.module.ai.config.Configure"/>
        <filter xpath="${exists(props.synapse._MEMORY_CONFIG_KEY)}">
            <ai.invokeConnection configKey="{${props.synapse._MEMORY_CONFIG_KEY}}"/>
        </filter>
        <filter xpath="${exists(props.synapse._LLM_CONFIG_KEY)}">
            <then>
                <ai.invokeConnection configKey="{${props.synapse._LLM_CONFIG_KEY}}"/>
                <class name="org.wso2.carbon.esb.module.ai.operations.LLMChat"/>
                <property name="_LLM_CONFIG_KEY" scope="default" action="remove"/>
                <property name="_MEMORY_CONFIG_KEY" scope="default" action="remove"/>
            </then>
            <else>
                <property name="_MEMORY_CONFIG_KEY" scope="default" action="remove"/>
                <payloadFactory media-type="json" template-type="default">
                    <format>{"error":"LLM connection is not provided"}</format>
                </payloadFactory>
                <throwError type="string" errorMessage="{${payload}}"/>
            </else>
        </filter>
    </sequence>
</template>
